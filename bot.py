import asyncio
import random

from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes
import logging
from config.config import API, MY_ID
from database.check_in_db import append_users_id_telegram, get_users_id_telegram, get_new_url_from_pars, detele_new_url

from data_Avito import pars_html_avito
from data_Cian import pars_html_cian

token = API
my_id = MY_ID

logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

BUTTON = range(1)
path_for_db = "database/base_urls.db"


# –°—é–¥–∞ –ø–µ—Ä–µ–¥–∞—ë—Ç—Å—è –∏–º–µ–Ω–Ω–æ –∫–∞–∫ (context: ContextTypes.DEFAULT_TYPE)
async def send_message_about_new_url(context: ContextTypes.DEFAULT_TYPE):

    user_id = await get_users_id_telegram(path_for_db)
    new_urls = await get_new_url_from_pars(path_for_db)

    print("asd")
    if not new_urls:
        pass

    else:
        for id_user_telegram in user_id:
            for url in new_urls:

                if url.split("/")[4] in ["kupit-kvartiru", "kvartiry"]:
                    just_text = ["–ù–æ–≤–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞, üèÉ‚Äç‚ôÇÔ∏è –±–µ–≥–æ–æ–æ–æ–æ–æ–æ–º", "–û–ø–∞-–æ–ø–∞-–æ–ø–∞ - –∫–≤–∞—Ä—Ç–∏—Ä–∞!üëæ",
                                 "–ê–õ–Ø–†–ú üîî, –Ω–æ–≤–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞",
                                 "–¢–∞–º —ç—Ç–æ, –∫–≤–∞—Ä—Ç–∏—Ä–∞ –Ω–æ–≤–∞—è üëâüèª", "–ù—É —Ç—ã —Ç–∞–º –¥–æ–ª–≥–æ üò∂, –∑–∞–±–µ—Ä—É—Ç –≤–µ–¥—å —Å–∫–æ—Ä–æ"]

                elif url.split("/")[4] in ["kupit-dom", "doma_dachi_kottedzhi"]:
                    just_text = ["üè†–ù–æ–≤—ã–π –¥–æ–º", "üèó–î–æ–º", "üîî–ù–æ–≤–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –¥–æ–º–∞",
                                 "–û–±—ä—è–≤–ª–µ–Ω–∏–µ –¥–æ–º–∞/–¥–∞—á–∏/–∫–æ—Ç—Ç–µ—Ç–¥–∂–∞/—á–µ–≥–æ—Ç–∞–º–µ—â—ë üëâüèª"]

                elif url.split("/")[4] in ["kupit-komnatu-bez-posrednikov", "komnaty"]:
                    just_text = ["‚õ∫Ô∏è–ù–æ–≤–∞—è –∫–æ–º–Ω–∞—Ç–∞", "üóø–ù–æ–≤–∞—è cum–Ω–∞—Ç–∞", "–û–±—ä—è–≤–ª–µ–Ω–∏–µ –∫–æ–º–Ω–∞—Ç—ã üëâüèª",
                                 "üîî–ù–æ–≤–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –∫–æ–º–Ω–∞—Ç—ã"]

                elif url.split("/")[4] in ["kupit-zemelniy-uchastok", "zemelnye_uchastki"]:
                    just_text = ["üåÖ–ù–æ–≤–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ —É—á–∞—Å—Ç–∫–∞", "–ù–æ–≤—ã–π —É—á–∞—Å—Ç–æ–∫", "–û–±—ä—è–≤–ª–µ–Ω–∏–µ —É—á–∞—Å—Ç–∫–∞ üëâüèª",
                                 "üîî–ù–æ–≤–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ —É—á–∞—Å—Ç–∫–∞"]

                else:
                    just_text = ["–ù–æ–≤–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ"]

                random_text = random.choice(just_text)
                await context.bot.send_message(chat_id=id_user_telegram, text=f'{random_text} - {url}')

        await detele_new_url(path_for_db)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.message.chat_id

    if str(chat_id) in await get_users_id_telegram(path_for_db):
        pass
    else:
        await append_users_id_telegram(chat_id, path_for_db)

    await context.bot.send_message(chat_id=update.effective_chat.id, text="LEEET'S FUUUUUCKKIIIIING GOOOOOOO!!!!")
    await context.bot.send_photo(chat_id=update.effective_chat.id, photo="image/pap.jpg")

    # –ß—Ç–æ–±—ã —Ä–∞–±–æ—Ç–∞–ª–æ, –Ω—É–∂–Ω–æ —Å–∫–∞—á–∞—Ç—å pip install python-telegram-bot[job-queue]
    # –î–∞–ª–µ–µ –æ–Ω–∞ –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å –∑–∞–¥–∞—á–∏ —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π –∏–ª–∏ –¥–∞–∂–µ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏, —Å –∑–∞–¥–∞–Ω–Ω—ã–º –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º.
    context.job_queue.run_repeating(send_message_about_new_url, interval=20, chat_id=chat_id)


async def main():
    app = Application.builder().token(token).concurrent_updates(True).build()

    app.add_handler(CommandHandler("start", start))

    task1 = pars_html_avito()
    task2 = pars_html_cian()
    tasks = [task1, task2]

    try:
        async with app:
            await app.initialize()
            await app.start()
            await app.updater.start_polling()
            await asyncio.gather(*tasks)
    except:
        KeyboardInterrupt()


if __name__ == '__main__':
    asyncio.run(main())
